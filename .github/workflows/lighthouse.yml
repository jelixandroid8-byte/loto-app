name: Lighthouse PWA Audit

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install lighthouse
        run: npm install -g lighthouse@10

      - name: Setup Chrome for CI
        id: setup_chrome
        uses: browser-actions/setup-chrome@v2
        with:
          chrome-version: 'latest'

      - name: Run Lighthouse (PWA)
        id: run_lighthouse
        env:
          # Use the explicit start_url (login) to avoid redirecting during the audit
          TARGET_URL: ${{ secrets.LIGHTHOUSE_URL || 'https://loto-app-45ud.onrender.com/login' }}
          CHROME_PATH: ${{ steps.setup_chrome.outputs.chrome_path }}
        run: |
          set -e
          mkdir -p reports
          echo "Preflight: checking $TARGET_URL"
          # Preflight: verify URL responds with 200. Print headers for debugging.
          curl -I --max-time 15 "$TARGET_URL" || { echo "Preflight curl failed"; exit 2; }
          echo "Preflight OK. Running Lighthouse..."
          # JSON and HTML outputs. Use the chrome path installed by the setup action and pass headless flags.
          # Increase max wait to allow slow starts and add verbose logging. Save stdout to a log so we can inspect partial output.
          lighthouse "$TARGET_URL" --only-categories=pwa --output=json --output=html --output-path=reports/lighthouse --chrome-path="$CHROME_PATH" --max-wait-for-load=60000 --pause-after-load=2000 --chrome-flags="--headless --no-sandbox --disable-gpu --disable-dev-shm-usage" --verbose 2>&1 | tee reports/lighthouse-cli.log || true
          ls -la reports || true

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: reports
